CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
        //sets the load using MSB (register) address
        DMux8Way(in=load, sel=address[9..11], 
                    a=loada, b=loadb, c=loadc, d=loadd, 
                    e=loade , f=loadf , g=loadg , h=loadh);

        // 8 RAM64s with load bit for read/write
        RAM512(in=in, load=loada, address=address[0..8], out=ram000);
        RAM512(in=in, load=loadb, address=address[0..8], out=ram001);
        RAM512(in=in, load=loadc, address=address[0..8], out=ram010);
        RAM512(in=in, load=loadd, address=address[0..8], out=ram011);
        RAM512(in=in, load=loade, address=address[0..8], out=ram100);
        RAM512(in=in, load=loadf, address=address[0..8], out=ram101);
        RAM512(in=in, load=loadg, address=address[0..8], out=ram110);
        RAM512(in=in, load=loadh, address=address[0..8], out=ram111);

        // selects one of 8 RAM64 values from MSB of address
        Mux8Way16(a=ram000, b=ram001, c=ram010, d=ram011, e=ram100,
                    f=ram101, g=ram110, h=ram111, 
                    sel=address[9..11], out=out);
}